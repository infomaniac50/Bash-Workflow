#!/bin/bash

function stamp() { date +"%s"; }
function arsync() { rsync -rlpPsthiD --stats "$@"; }

function config_example()
{
  cat <<EOF
#!/bin/bash
# .coder.sample

# Keep the trailing slashes consistent
# if you want rsync to upload to the right place.

# Extra rsync arguments
# extra_=""

# Local Project Directory
local_='src/'

# Remote Project Directory
remote_='user@example.com:/home/user/public_html/'
EOF

}

function usage()
{
  echo "Usage: ${0##*/} [push|pull] <extra rsync arguments>"
}


function archive_real()
{
  archive_basename="${local_%%/}-"`stamp`
  mkdir -p "$local_"

  arsync --delete "$remote_" "$local_" "$@" && tar -c "$local_" | xz -c > "$archive_basename.tar.xz"
  return $?
}

function archive()
{
  local answer="";

  if [[ -z $backup_ ]]; then
    backup_="backup"
  fi

  if [[ ! -d "$backup_" ]]; then
    read -p "The directory $backup_ does not exist. Do you want to create it? [y/n] " answer
    if [[ $answer == "y" || $answer == "Y" ]]; then
      mkdir -p "$backup_"
    else
      echo "Archive Canceled"
      return 1
    fi
  fi
  answer="";

  cd "$backup_"
  if [[ -d "$local_" ]]; then
    read -p "Local backup directory exists. Do you want to replace it? [y/n] " answer
    if [[ $answer == "y" || $answer == "Y" ]]; then
      echo "Overwriting directory content."
      archive_real
      return $?
    else
      echo "Archive Canceled"
      return 1
    fi
  else
    archive_real
    return $?
  fi
}

function main()
{
  if [[ ! -f ".coder" ]]; then
    echo ".coder does not exist!"
    echo ""
    config_example
    exit 1
  fi

  source ".coder"
  if [[ -z $extra_ ]]; then
    extra_=""
  fi

  action="$1"
  shift

  case $action in
    "pull" )
      arsync "$remote_" "$local_" $extra_ "$@"
      ;;
    "push" )
      arsync "$local_" "$remote_" $extra_ "$@"
      ;;
    "fix_perms" )
      find "$local_" -type d -exec chmod 755 '{}' \;
      find "$local_" -type f -exec chmod 644 '{}' \;
      ;;
    "archive" )
      archive "$@"
      ;;
    * )
      usage
      ;;
  esac

}

main "$@"
